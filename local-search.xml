<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>FindPotty Features</title>
    <link href="/blog/posts/4425dcef.html"/>
    <url>/blog/posts/4425dcef.html</url>
    
    <content type="html"><![CDATA[<style>.img-demo img {    width: 270px;    margin-bottom: 10px}.description p {    padding: 10px;    /* font-family: 'Helvetica', 'Arial', sans-serif; */    font-family: proximanova-regular,sans-serif;    color: ##1b1b1b;    font-size: 20px;    background-color: #ebebf2;}</style><h1 id="FindPotty-Features"><a href="#FindPotty-Features" class="headerlink" title="FindPotty Features"></a>FindPotty Features</h1><h2 id="Login"><a href="#Login" class="headerlink" title="Login"></a>Login</h2><div class="img-demo">    <img src="../img/findapotty-features/login.png"></div><div class="description">    <p></p></div><h2 id="Markers-and-info-page"><a href="#Markers-and-info-page" class="headerlink" title="Markers and info page"></a>Markers and info page</h2><div class="img-demo">    <img src="../img/findapotty-features/markers_and_preview.png">    <img src="../img/findapotty-features/info_page.png"></div><div class="description">    <p>        This application's main functionality and display is the map. The map's function is to navigate users to the nearest restroom within a timely manner by displaying markers for all available restrooms. Each marker contains information about the restroom in the location such as address and name of the restroom.    </p></div><h2 id="Potty-Diary"><a href="#Potty-Diary" class="headerlink" title="Potty Diary"></a>Potty Diary</h2><div class="img-demo">    <img src="../img/findapotty-features/diary_1.png">    <img src="../img/findapotty-features/diary_2.png"></div><div class="description">    <p>        This feature keeps a record of user journal bowel movement information. The user will be prompted to answer questions about their most recent bowel and bladder moment. The question will focus on collecting information on the user’s comfort and habits during the experience and much more.    </p></div><h2 id="Potty-Trends"><a href="#Potty-Trends" class="headerlink" title="Potty Trends"></a>Potty Trends</h2><div class="img-demo">    <img src="../img/findapotty-features/trends_monthly.png">    <img src="../img/findapotty-features/trends_weekly.png">    <img src="../img/findapotty-features/trends_weekly_intensity.png">    <img src="../img/findapotty-features/trends_yealy_intensity.png"></div><div class="description">    <p>        Contains a trends feature that will display various user history and bio related metrics. This feature is in correlation to the potty journal submissions where the submission answers are tracked and displays a visual representation of the trends.    </p></div><h2 id="Newsfeed"><a href="#Newsfeed" class="headerlink" title="Newsfeed"></a>Newsfeed</h2><div class="img-demo">    <img src="../img/findapotty-features/feeds.png"></div><div class="description">    <p>        Displays a list of news articles for users to read through. Its functionality is for users to have something to do while using the restroom and make using the restroom a more entertaining experience.     </p></div><h2 id="Trainer"><a href="#Trainer" class="headerlink" title="Trainer"></a>Trainer</h2><div class="img-demo">    <img src="../img/findapotty-features/trainer.png"></div><div class="description">    <p>        A guide for users in potty training or any potty related needs. In this case, a list of tips are displayed and users are able to be aware of information they may or may not know about.    </p></div><h2 id="Toilet-Tunes"><a href="#Toilet-Tunes" class="headerlink" title="Toilet Tunes"></a>Toilet Tunes</h2><div class="img-demo">    <img src="../img/findapotty-features/tunes_1.png">    <img src="../img/findapotty-features/tunes_2.png"></div><div class="description">    <p>        Tunes can be played while the user is in the restroom to cancel out external distracting noises and help induce relaxation.    </p></div><h2 id="User-Profile"><a href="#User-Profile" class="headerlink" title="User Profile"></a>User Profile</h2><div class="img-demo">    <img src="../img/findapotty-features/profile.png"></div><div class="description">    <p>        For each account created, each user has their own profile which displays a unique username and profile image. The profile page includes the user’s personal information: name, email, birthday, and gender.    </p></div><h2 id="Review"><a href="#Review" class="headerlink" title="Review"></a>Review</h2><div class="img-demo"></div><div class="description">    <p>        Users are able to write a review for the restrooms listed. They are able to express their opinion about the restroom and indicate a star rating.    </p></div><h2 id="Reminder"><a href="#Reminder" class="headerlink" title="Reminder"></a>Reminder</h2><div class="img-demo"></div><div class="description">    <p>        Users can schedule a reminder for any sort by indicating the time, date, and description of what the reminder is for.    </p></div><h2 id="Edit-Restroom-Page"><a href="#Edit-Restroom-Page" class="headerlink" title="Edit Restroom Page"></a>Edit Restroom Page</h2><div class="img-demo">    <img src="../img/findapotty-features/reminder_1.png"></div><div class="description">    <p>        Restroom pages are able to be modified after one has been created. The name and description of the restroom page are edited and updated once submitted.    </p></div><h2 id="Discussion"><a href="#Discussion" class="headerlink" title="Discussion"></a>Discussion</h2><div class="img-demo">    <img src="../img/findapotty-features/discuss_1.png">    <img src="../img/findapotty-features/discuss_2.png"></div><div class="description">    <p>        Users are able to interact with one another by creating posts. Under each posts, users can also make comments.    </p></div><h1 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h1><ul><li><a href="https://github.com/kaylynnkk/FindAPotty">FindPotty</a></li></ul>]]></content>
    
    
    
    <tags>
      
      <tag>android</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>网页前后端连接</title>
    <link href="/blog/posts/1fca957b.html"/>
    <url>/blog/posts/1fca957b.html</url>
    
    <content type="html"><![CDATA[<h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p>前端 html 发送表单至后端 mysql</p><h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">&gt; </span><span class="language-bash">sudo pacman -Syu nginx php php-fpm</span><br></code></pre></td></tr></table></figure><h1 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">&gt; </span><span class="language-bash">sudo vim /etc/php/php.ini</span><br></code></pre></td></tr></table></figure><p>取消注释</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs conf">extension=mysqli<br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">&gt; </span><span class="language-bash">sudo vim /etc/nginx/nginx.conf</span><br></code></pre></td></tr></table></figure><p>添加</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs conf">location ~ \.php$ &#123;<br>        # 404<br>        try_files $fastcgi_script_name =404;<br><br>        # default fastcgi_params<br>        include fastcgi_params;<br><br>        # fastcgi settings<br>        fastcgi_passunix:/run/php-fpm/php-fpm.sock;<br>        fastcgi_indexindex.php;<br>        fastcgi_buffers8 16k;<br>        fastcgi_buffer_size32k;<br><br>        # fastcgi params<br>        fastcgi_param DOCUMENT_ROOT$realpath_root;<br>        fastcgi_param SCRIPT_FILENAME$realpath_root$fastcgi_script_name;<br>        #fastcgi_param PHP_ADMIN_VALUE&quot;open_basedir=$base/:/usr/lib/php/:/tmp/&quot;;<br>    &#125;<br><br></code></pre></td></tr></table></figure><h1 id="启动服务"><a href="#启动服务" class="headerlink" title="启动服务"></a>启动服务</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">&gt; </span><span class="language-bash">sudo systemctl start php-fpm</span><br><span class="hljs-meta prompt_">&gt; </span><span class="language-bash">sudo systemctl start nginx</span><br></code></pre></td></tr></table></figure><h1 id="mysql-Docker-镜像"><a href="#mysql-Docker-镜像" class="headerlink" title="mysql Docker 镜像"></a>mysql Docker 镜像</h1><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs yml"><span class="hljs-attr">version:</span> <span class="hljs-string">&#x27;3.1&#x27;</span><br><span class="hljs-attr">services:</span><br>  <span class="hljs-attr">db:</span><br>    <span class="hljs-attr">image:</span> <span class="hljs-string">mysql</span><br>    <span class="hljs-attr">restart:</span> <span class="hljs-string">always</span><br>    <span class="hljs-attr">environment:</span><br>      <span class="hljs-attr">MYSQL_ROOT_PASSWORD:</span> <span class="hljs-string">root</span><br>    <span class="hljs-attr">ports:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">&quot;3308:3306&quot;</span><br>  <span class="hljs-attr">phpmyadmin:</span><br>    <span class="hljs-attr">image:</span> <span class="hljs-string">phpmyadmin/phpmyadmin:latest</span><br>    <span class="hljs-attr">restart:</span> <span class="hljs-string">always</span><br>    <span class="hljs-attr">environment:</span><br>      <span class="hljs-attr">PMA_HOST:</span> <span class="hljs-string">db</span><br>      <span class="hljs-attr">PMA_USER:</span> <span class="hljs-string">root</span><br>      <span class="hljs-attr">PMA_PASSWORD:</span> <span class="hljs-string">root</span><br>    <span class="hljs-attr">ports:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">&quot;8011:80&quot;</span><br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">&gt; </span><span class="language-bash">docker-compose up</span><br></code></pre></td></tr></table></figure><p>访问 localhost:8011 进入 phpadmin</p><h1 id="html-php"><a href="#html-php" class="headerlink" title="html &amp; php"></a>html &amp; php</h1><p>index.html</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">xmlns</span>=<span class="hljs-string">&quot;http://www.w3.org/1999/xhtml&quot;</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">http-equiv</span>=<span class="hljs-string">&quot;Content-Type&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;text/html; charset=utf-8&quot;</span> /&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>Contact Form - PHP/MySQL Demo Code<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">fieldset</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">legend</span>&gt;</span>Contact Form<span class="hljs-tag">&lt;/<span class="hljs-name">legend</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">form</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;frmContact&quot;</span> <span class="hljs-attr">method</span>=<span class="hljs-string">&quot;post&quot;</span> <span class="hljs-attr">action</span>=<span class="hljs-string">&quot;./userdata.php&quot;</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">label</span> <span class="hljs-attr">for</span>=<span class="hljs-string">&quot;username&quot;</span>&gt;</span>username <span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;txtUsername&quot;</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;txtUsername&quot;</span>&gt;</span><br>            <span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">label</span> <span class="hljs-attr">for</span>=<span class="hljs-string">&quot;password&quot;</span>&gt;</span>password<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;txtPassword&quot;</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;txtPassword&quot;</span>&gt;</span><br>            <span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span><span class="hljs-symbol">&amp;nbsp;</span><span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;submit&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;Submit&quot;</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;Submit&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;Submit&quot;</span>&gt;</span><br>            <span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">form</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">fieldset</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><p>userdata.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-comment">#phpinfo();</span><br><span class="hljs-variable">$con</span> = <span class="hljs-title function_ invoke__">mysqli_connect</span>(<span class="hljs-string">&#x27;localhost:3308&#x27;</span>,<span class="hljs-string">&#x27;root&#x27;</span>,<span class="hljs-string">&#x27;root&#x27;</span>,<span class="hljs-string">&#x27;db_connect&#x27;</span>);<br><br><span class="hljs-comment">// get the post records</span><br><span class="hljs-variable">$txtUsername</span> = <span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;txtUsername&#x27;</span>];<br><span class="hljs-variable">$txtPassword</span> = <span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;txtPassword&#x27;</span>];<br><br><span class="hljs-comment">// database insert SQL code</span><br><span class="hljs-variable">$sql</span> = <span class="hljs-string">&quot;INSERT INTO `tbl_contact` (`username`, `password`) VALUES (&#x27;<span class="hljs-subst">$txtUsername</span>&#x27;, &#x27;<span class="hljs-subst">$txtPassword</span>&#x27;)&quot;</span>;<br><br><span class="hljs-comment">// insert in database </span><br><span class="hljs-variable">$rs</span> = <span class="hljs-title function_ invoke__">mysqli_query</span>(<span class="hljs-variable">$con</span>, <span class="hljs-variable">$sql</span>);<br><br><span class="hljs-keyword">if</span>(<span class="hljs-variable">$rs</span>)<br>&#123;<br><span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;Contact Records Inserted&quot;</span>;<br>&#125;<br><br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>访问 html 填写表单，刷新 phpadmin</p>]]></content>
    
    
    
    <tags>
      
      <tag>archlinux</tag>
      
      <tag>docker</tag>
      
      <tag>php</tag>
      
      <tag>nginx</tag>
      
      <tag>html</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Docker 的一些小助手</title>
    <link href="/blog/posts/c90f7e13.html"/>
    <url>/blog/posts/c90f7e13.html</url>
    
    <content type="html"><![CDATA[<h1 id="watchtower"><a href="#watchtower" class="headerlink" title="watchtower"></a>watchtower</h1><p>自动更新已拉取的镜像，删除更新残留的旧版本</p><h1 id="portainer"><a href="#portainer" class="headerlink" title="portainer"></a>portainer</h1><p>webui 的方式管理所有已拉取的镜像</p><h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1>]]></content>
    
    
    
    <tags>
      
      <tag>docker</tag>
      
      <tag>watchtower</tag>
      
      <tag>portainer</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>使用 py-kms 激活 Windows 和 Office</title>
    <link href="/blog/posts/b255e5fb.html"/>
    <url>/blog/posts/b255e5fb.html</url>
    
    <content type="html"><![CDATA[<h1 id="py-kms"><a href="#py-kms" class="headerlink" title="py-kms"></a>py-kms</h1><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>激活 Windows 和 Office</p><h2 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h2><h3 id="设备"><a href="#设备" class="headerlink" title="设备"></a>设备</h3><p>Wincows<br>Linux</p><h3 id="docker-compose-部署"><a href="#docker-compose-部署" class="headerlink" title="docker-compose 部署"></a>docker-compose 部署</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">version:</span> <span class="hljs-string">&#x27;3&#x27;</span><br><br><span class="hljs-attr">services:</span><br>  <span class="hljs-attr">kms:</span><br>    <span class="hljs-attr">image:</span> <span class="hljs-string">ghcr.io/py-kms-organization/py-kms:latest</span><br>    <span class="hljs-attr">ports:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-number">1688</span><span class="hljs-string">:1688</span><br>    <span class="hljs-attr">environment:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">IP=0.0.0.0</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">HWID=RANDOM</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">LOGLEVEL=INFO</span><br>    <span class="hljs-attr">restart:</span> <span class="hljs-string">always</span><br>    <span class="hljs-attr">volumes:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">./db:/home/py-kms/db</span><br></code></pre></td></tr></table></figure><ul><li>冒号左边的端口 <code>1688</code> 可以改成其他可用的端口</li></ul><h3 id="安装-Windows-（可跳过）"><a href="#安装-Windows-（可跳过）" class="headerlink" title="安装 Windows （可跳过）"></a>安装 Windows （可跳过）</h3><h3 id="自定义安装-Office-套件（可跳过）"><a href="#自定义安装-Office-套件（可跳过）" class="headerlink" title="自定义安装 Office 套件（可跳过）"></a>自定义安装 Office 套件（可跳过）</h3><div class="alert alert-info">    <p class="alert-heading">        <b>值得一提:</b>    </p>    <div class="alert-body">        <p>自定义安装可<b>自行选择</b>需要安装的套件</p>    </div></div><ul><li>创建文件夹 <code>office_setup</code></li><li>进入 <a href="https://www.microsoft.com/en-us/download/details.aspx?id=49117">Office Deployment Tool</a> 下载 <code>Office Deployment Tool</code>，保存到 <code>office_setup</code> 中</li><li>双击运行 <code>Office Deployment Tool</code> 并提取文件到 <code>office_setup</code> 中</li><li>进入 <a href="https://config.office.com/deploymentsettings">Office 自定义工具</a> 选择需求（版本，想要安装的软件套件 Word，PowerPoint，Excel 等）<ul><li>推荐选择 Office LTSC 标准版 2021</li></ul></li><li>导出 xml 格式的配置文件，命名为 <code>all-in-one</code>，保存到 <code>office_setup</code> 中</li><li>打开 cmd 进入<code>office_setup</code> 目录<ul><li>执行 <code>setup.exe /configure all-in-one.xml</code></li></ul></li><li>等待安装结束</li></ul><h2 id="激活"><a href="#激活" class="headerlink" title="激活"></a>激活</h2><div class="alert alert-warning">    <p class="alert-heading">        <b>注意:</b>    </p>    <div class="alert-body">        <p>以下命令需要以管理员身份运行</p>    </div></div><h3 id="激活-Windows"><a href="#激活-Windows" class="headerlink" title="激活 Windows"></a>激活 Windows</h3><div class="alert alert-warning">    <p class="alert-heading">        <b>注意:</b>    </p>    <div class="alert-body">        <p>slmgr 命令在 C:\Windows\system32\ 目录下</p>        <p>无窗口模式：在命令前添加 cscript //nologo 并将 slmgr 改为 slmgr.vbs</p>    </div></div><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">安装产品密钥 (可忽略)</span><br><span class="hljs-meta prompt_">system32&gt; </span><span class="language-bash">slmgr /ipk &lt;产品密钥&gt;</span> <br>或<br><span class="hljs-meta prompt_">system32&gt; </span><span class="language-bash">cscript //nologo slmgr.vbs /ipk &lt;产品密钥&gt;</span> <br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">卸载产品密钥 (可忽略)</span><br><span class="hljs-meta prompt_">system32&gt; </span><span class="language-bash">slmgr /upk</span> <br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">激活 windows (ip:1688)</span><br><span class="hljs-meta prompt_">system32&gt; </span><span class="language-bash">slmgr /skms &lt;ip地址&gt;:1688 &amp;&amp; slmgr /ato</span> <br>或<br><span class="hljs-meta prompt_"># </span><span class="language-bash">激活 windows (端口反代)</span><br><span class="hljs-meta prompt_">system32&gt; </span><span class="language-bash">slmgr /skms &lt;域名&gt; &amp;&amp; slmgr /ato</span><br><br></code></pre></td></tr></table></figure><h3 id="激活-Office"><a href="#激活-Office" class="headerlink" title="激活 Office"></a>激活 Office</h3><div class="alert alert-warning">    <p class="alert-heading">        <b>注意:</b>    </p>    <div class="alert-body">        <p>必须是 volume license (VL) 版本的 Office</p>        <p>opps 命令在 C:\Program Files\Microsoft Office\OfficeXX 目录下</p>    </div></div><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">查看状态，包括后5位产品密钥 (可忽略)</span><br><span class="hljs-meta prompt_">OfficeXX&gt; </span><span class="language-bash">cscript //nologo ospp.vbs /dstatus</span> <br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">卸载产品密钥 (可忽略)</span><br><span class="hljs-meta prompt_">OfficeXX&gt; </span><span class="language-bash">cscript //nologo ospp.vbs /unpkey:&lt;后5位&gt;</span> <br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">安装产品密钥 (可忽略)</span><br><span class="hljs-meta prompt_">OfficeXX&gt; </span><span class="language-bash">cscript //nologo ospp.vbs /inpkey:&lt;产品密钥&gt;</span> <br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">激活 Office (ip:1688)</span><br><span class="hljs-meta prompt_">OfficeXX&gt; </span><span class="language-bash">cscript //nologo ospp.vbs /sethst:&lt;ip地址&gt; &amp;&amp; cscript //nologo ospp.vbs /setprt:1688 &amp;&amp; cscript //nologo ospp.vbs /act</span><br>或<br><span class="hljs-meta prompt_"># </span><span class="language-bash">激活 Office (端口反代)</span><br><span class="hljs-meta prompt_">OfficeXX&gt; </span><span class="language-bash">cscript //nologo ospp.vbs /sethst:&lt;域名&gt; &amp;&amp; cscript //nologo ospp.vbs /act</span><br></code></pre></td></tr></table></figure><p>看到 <code>&lt;Product activation successful&gt;</code> 说明激活成功了</p><h2 id="完善"><a href="#完善" class="headerlink" title="完善"></a>完善</h2><p>如果发现右键<strong>新建选项</strong>中没有出现安装的 office 软件，可采取以下任一措施</p><ul><li>在控制面板中找到 office 右键 -&gt; 更改 -&gt; 快速修复</li><li>添加并修改新建选项顺序：<a href="https://blog.csdn.net/qq_37504892/article/details/107727369">更改Windows系统右击新建的文件顺序</a></li></ul><h1 id="参考内容"><a href="#参考内容" class="headerlink" title="参考内容"></a>参考内容</h1><p><a href="https://github.com/SystemRage/py-kms">py-kms on github</a><br><a href="https://py-kms.readthedocs.io/en/latest/Usage.html#activation-procedure">Activation Procedure</a><br><a href="https://py-kms.readthedocs.io/en/latest/Keys.html">GVLK keys</a><br><a href="https://blog.csdn.net/qq_37504892/article/details/107727369">更改Windows系统右击新建的文件顺序</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>windows</tag>
      
      <tag>linux</tag>
      
      <tag>kms</tag>
      
      <tag>py-kms</tag>
      
      <tag>activator</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>部署 Grasscutter 3.0 到远端 archlinux 服务器</title>
    <link href="/blog/posts/c511ff01.html"/>
    <url>/blog/posts/c511ff01.html</url>
    
    <content type="html"><![CDATA[<h1 id="服务器端-Linux"><a href="#服务器端-Linux" class="headerlink" title="服务器端 (Linux)"></a>服务器端 (Linux)</h1><h2 id="mongodb"><a href="#mongodb" class="headerlink" title="mongodb"></a>mongodb</h2><h2 id="最新的-jar-包"><a href="#最新的-jar-包" class="headerlink" title="最新的 jar 包"></a>最新的 jar 包</h2><ul><li><p><strong>方法1： 自行编译</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">&gt; </span><span class="language-bash">git <span class="hljs-built_in">clone</span> https://github.com/Grasscutters/Grasscutter</span><br><span class="hljs-meta prompt_">&gt; </span><span class="language-bash"><span class="hljs-built_in">cd</span> Grasscutter</span><br><span class="hljs-meta prompt_">&gt; </span><span class="language-bash">./gradlew jar</span><br></code></pre></td></tr></table></figure></li><li><p><strong>方法2： 直接下载(需要登陆 github)</strong></p></li></ul><p>新建 Grasscutter 文件夹</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">&gt; </span><span class="language-bash"><span class="hljs-built_in">mkdir</span> Grasscutter &amp;&amp; <span class="hljs-built_in">cd</span> Grasscutter</span><br></code></pre></td></tr></table></figure><p>访问 actions 页面</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs link">https://github.com/Grasscutters/Grasscutter/actions/workflows/build.yml<br></code></pre></td></tr></table></figure><ul><li>找到最新的（最上面的）标有绿色对勾的 workflow，并点击</li><li>找到下方的 Artifacts，并点击其中的 Grasscutter 开始下载</li><li>下载后解压出 dev jar 包</li></ul><p>执行此步骤需要添加 keystore.p12</p><h3 id="目前文件结构"><a href="#目前文件结构" class="headerlink" title="目前文件结构"></a>目前文件结构</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs text">Grasscutter<br>├── keystore.p12<br>└── Grasscutter.jar<br></code></pre></td></tr></table></figure><h2 id="添加-resources"><a href="#添加-resources" class="headerlink" title="添加 resources"></a>添加 resources</h2><p>在 Grasscutter 文件夹下新建 resources-koko</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">&gt; </span><span class="language-bash"><span class="hljs-built_in">mkdir</span> resources-koko</span><br></code></pre></td></tr></table></figure><p>下载 resources 到 resources-koko 文件夹</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">&gt; </span><span class="language-bash"><span class="hljs-built_in">cd</span> resources-koko</span><br><span class="hljs-meta prompt_">&gt; </span><span class="language-bash">git <span class="hljs-built_in">clone</span> https://github.com/Koko-boya/Grasscutter_Resources</span><br><span class="hljs-meta prompt_">&gt; </span><span class="language-bash"><span class="hljs-built_in">cd</span> ..</span><br></code></pre></td></tr></table></figure><p>建立软连接</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">&gt; </span><span class="language-bash"><span class="hljs-built_in">ln</span> -s resources-koko/Grasscutter_Resources/Resources/ resources</span><br></code></pre></td></tr></table></figure><h3 id="目前文件结构-1"><a href="#目前文件结构-1" class="headerlink" title="目前文件结构"></a>目前文件结构</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs text">Grasscutter<br>├── keystore.p12<br>├── Grasscutter.jar<br>├── resources -&gt; resources-koko/Grasscutter_Resources/Resources/<br>└── resources-koko<br></code></pre></td></tr></table></figure><h2 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">&gt; </span><span class="language-bash">java -jar &lt;jar包&gt; <span class="hljs-comment"># jar 包每个版本名字可能不一样，故用可替换语句代替</span></span><br></code></pre></td></tr></table></figure><p>首次运行会先生成 config.json，并检测能否连接 mongodb 和 resources 是否完整。</p><h3 id="目前文件结构-2"><a href="#目前文件结构-2" class="headerlink" title="目前文件结构"></a>目前文件结构</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs text">Grasscutter<br>├── keystore.p12<br>├── Grasscutter.jar<br>├── resources -&gt; resources-koko/Grasscutter_Resources/Resources/<br>├── resources-koko<br>└── config.json<br></code></pre></td></tr></table></figure><h2 id="配置-config"><a href="#配置-config" class="headerlink" title="配置 config"></a>配置 config</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">&gt; </span><span class="language-bash">vim config.json</span><br><br>修改 http 下的<br>bindPort: &quot;&lt;port&gt;&quot;<br>accessAddress: &quot;&lt;serverIP&gt;&quot;<br>accessPort: &quot;&lt;port&gt;&quot;<br><span class="hljs-meta prompt_"># </span><span class="language-bash">说明： port 可以是任何已开放并为占用的端口</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">如果</span><br><br>修改 game 下的<br>accessAddress: &quot;&lt;serverIP&gt;&quot;<br>accessPort: &quot;22102&quot;<br></code></pre></td></tr></table></figure><h2 id="启动服务器"><a href="#启动服务器" class="headerlink" title="启动服务器"></a>启动服务器</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">&gt; </span><span class="language-bash">screen -R grasscutter <span class="hljs-comment"># optional</span></span><br><span class="hljs-meta prompt_">&gt; </span><span class="language-bash">java -jar &lt;jar包&gt;</span><br></code></pre></td></tr></table></figure><h1 id="本地（Windows）"><a href="#本地（Windows）" class="headerlink" title="本地（Windows）"></a>本地（Windows）</h1><h2 id="启用-mitm-proxy"><a href="#启用-mitm-proxy" class="headerlink" title="启用 mitm proxy"></a>启用 mitm proxy</h2><h2 id="开始游戏"><a href="#开始游戏" class="headerlink" title="开始游戏"></a>开始游戏</h2><ul><li>下载最新的 zip 包<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs link">https://github.com/Grasscutters/Cultivation/releases<br></code></pre></td></tr></table></figure></li><li>解压并已管理员的方式运行 cultivation.exe</li><li>勾选 connect via Grasscutter，并填入 服务器ip 和 端口</li><li>点击右上角齿轮，进入设置<ul><li>添加 game.exe (不是 launcher.exe)</li><li>取消勾选 use internal proxy</li></ul></li><li>退出设置界面</li><li>开始游戏</li></ul>]]></content>
    
    
    
    <tags>
      
      <tag>archlinux</tag>
      
      <tag>grasscutter</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Archlinux-issue</title>
    <link href="/blog/posts/85a2cafc.html"/>
    <url>/blog/posts/85a2cafc.html</url>
    
    <content type="html"><![CDATA[<h1 id="During-installation"><a href="#During-installation" class="headerlink" title="During installation"></a>During installation</h1><h2 id="virtual-machine"><a href="#virtual-machine" class="headerlink" title="virtual machine"></a>virtual machine</h2><h3 id="no-internet-in-vm"><a href="#no-internet-in-vm" class="headerlink" title="no internet in vm"></a>no internet in vm</h3><ul><li>进入 windows 服务管理 services.msc</li><li>找到并开启 VMware DHCP Service 和 VMware NAT Service</li><li>linux 安装 dhcpcd</li><li>虚拟机网络选项选择 NAT</li><li>linux 开启 dhcpcd 服务<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">&gt; </span><span class="language-bash">arch-chroot /mnt</span><br><span class="hljs-meta prompt_">&gt; </span><span class="language-bash">pacman -Syu dhcpcd</span><br><span class="hljs-meta prompt_">&gt; </span><span class="language-bash">systemctl start dhcpcd</span><br><span class="hljs-meta prompt_">&gt; </span><span class="language-bash">systemctl <span class="hljs-built_in">enable</span> dhcpcd</span><br></code></pre></td></tr></table></figure></li></ul><h2 id="phisical-machine"><a href="#phisical-machine" class="headerlink" title="phisical machine"></a>phisical machine</h2><h1 id="After-installed"><a href="#After-installed" class="headerlink" title="After installed"></a>After installed</h1><h2 id="virtual-machine-1"><a href="#virtual-machine-1" class="headerlink" title="virtual machine"></a>virtual machine</h2><h2 id="phisical-machine-1"><a href="#phisical-machine-1" class="headerlink" title="phisical machine"></a>phisical machine</h2><h3 id="File-…-is-corrupted-invalid-or-corrupted-package-PGP-signature"><a href="#File-…-is-corrupted-invalid-or-corrupted-package-PGP-signature" class="headerlink" title="File … is corrupted (invalid or corrupted package (PGP signature))."></a>File … is corrupted (invalid or corrupted package (PGP signature)).</h3><p>更新 archlinux-keyring</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">&gt; </span><span class="language-bash">sudo pacman -S archlinux-keyring</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>archlinux</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>windows 下映射网络文件夹 | rclone</title>
    <link href="/blog/posts/49635e49.html"/>
    <url>/blog/posts/49635e49.html</url>
    
    <content type="html"><![CDATA[<h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p>windows下映射网络文件夹</p><h1 id="下载和启动-rclone"><a href="#下载和启动-rclone" class="headerlink" title="下载和启动 rclone"></a>下载和启动 rclone</h1><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs text">https://rclone.org/downloads/<br></code></pre></td></tr></table></figure><p>解压文件夹，文件夹内打开 cmd，输入</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs text">&gt; rclone<br></code></pre></td></tr></table></figure><h1 id="config"><a href="#config" class="headerlink" title="config"></a>config</h1><h2 id="默认-config-路径"><a href="#默认-config-路径" class="headerlink" title="默认 config 路径"></a>默认 config 路径</h2><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs text">&gt; rclone config file<br># C:\Users\&lt;username&gt;\AppData\Roaming\rclone\rclone.conf<br></code></pre></td></tr></table></figure><h2 id="生成-config"><a href="#生成-config" class="headerlink" title="生成 config"></a>生成 config</h2><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs text">&gt; rclone config<br><br>name = &lt;name&gt; # example(marmot)<br>type = webdav<br>url = &lt;网络文件夹&gt; # example(https://dav.xxx.org)<br>vendor = sharepoint-ntlm # self-host<br>user = &lt;username&gt; #如果有验证<br>pass = &lt;password&gt; #如果有验证<br></code></pre></td></tr></table></figure><h1 id="安装-winfsp"><a href="#安装-winfsp" class="headerlink" title="安装 winfsp"></a>安装 winfsp</h1><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">https:<span class="hljs-regexp">//</span>winfsp.dev<span class="hljs-regexp">/rel/</span><br></code></pre></td></tr></table></figure><p>不装报错</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs text">Fatal error: failed to mount FUSE fs: mount stopped before calling Init: mount failed: cgofuse: cannot find winfsp<br></code></pre></td></tr></table></figure><h1 id="挂载"><a href="#挂载" class="headerlink" title="挂载"></a>挂载</h1><h2 id="查看列表"><a href="#查看列表" class="headerlink" title="查看列表"></a>查看列表</h2><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs text">&gt; rclone lsf &quot;marmot:&quot;<br></code></pre></td></tr></table></figure><h2 id="挂载在-Z-盘"><a href="#挂载在-Z-盘" class="headerlink" title="挂载在 Z 盘"></a>挂载在 Z 盘</h2><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs text">&gt; rclone mount &quot;marmot:&quot; Z:<br></code></pre></td></tr></table></figure><h1 id="没了"><a href="#没了" class="headerlink" title="没了"></a>没了</h1>]]></content>
    
    
    
    <tags>
      
      <tag>windows</tag>
      
      <tag>rclone</tag>
      
      <tag>webdav</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Arch Linux Setup</title>
    <link href="/blog/posts/56e4b39.html"/>
    <url>/blog/posts/56e4b39.html</url>
    
    <content type="html"><![CDATA[<h1 id="密钥登陆-ssh"><a href="#密钥登陆-ssh" class="headerlink" title="密钥登陆 | ssh"></a>密钥登陆 | ssh</h1><h2 id="生成"><a href="#生成" class="headerlink" title="生成"></a>生成</h2><p>生成密钥对，并将公钥复制进authorized_key</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">&gt; </span><span class="language-bash">ssh-keygen -t ed25519 -b 4096</span><br><span class="hljs-meta prompt_">&gt; </span><span class="language-bash"><span class="hljs-built_in">mv</span> public.key ~/.ssh/authorized_key</span><br></code></pre></td></tr></table></figure><p>将私钥存入本地</p><h2 id="开启验证，并禁用密码登录和-root-登陆"><a href="#开启验证，并禁用密码登录和-root-登陆" class="headerlink" title="开启验证，并禁用密码登录和 root 登陆"></a>开启验证，并禁用密码登录和 root 登陆</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">&gt; </span><span class="language-bash">vim /etc/ssh/sshd_config</span><br><br>  PubkeyAuthentication yes<br>  PasswordAuthentication no<br>  PermitRootLogin no<br></code></pre></td></tr></table></figure><h2 id="重启ssh"><a href="#重启ssh" class="headerlink" title="重启ssh"></a>重启ssh</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">&gt; </span><span class="language-bash">sudo systemctl restart sshd.service</span><br></code></pre></td></tr></table></figure><h1 id="防火墙-firewalld"><a href="#防火墙-firewalld" class="headerlink" title="防火墙 firewalld"></a>防火墙 firewalld</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">&gt; </span><span class="language-bash">sudo pacman -Syu firewalld</span><br><span class="hljs-meta prompt_">&gt; </span><span class="language-bash">sudo systemctl <span class="hljs-built_in">enable</span> firewalld.service</span><br><span class="hljs-meta prompt_">&gt; </span><span class="language-bash">sudo systemctl start firewalld.service <span class="hljs-comment"># 不会断开已经建立 tcp 链接的端口</span></span><br><span class="hljs-meta prompt_">&gt; </span><span class="language-bash">sudo systemctl restart firewalld.service</span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">添加端口</span><br><span class="hljs-meta prompt_">&gt; </span><span class="language-bash">sudo firewall-cmd --zone=public --permanent --add-port=&lt;port&gt;/tcp</span><br><span class="hljs-meta prompt_">&gt; </span><span class="language-bash">sudo firewall-cmd --zone=public --permanent --add-port=&lt;port&gt;/udp</span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">移除端口</span><br><span class="hljs-meta prompt_">&gt; </span><span class="language-bash">sudo firewall-cmd --zone=public --permanent --remove-port=&lt;port&gt;/tcp</span><br><span class="hljs-meta prompt_">&gt; </span><span class="language-bash">sudo firewall-cmd --zone=public --permanent --remove-port=&lt;port&gt;/udp</span><br></code></pre></td></tr></table></figure><h1 id="tar"><a href="#tar" class="headerlink" title="tar"></a>tar</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">&gt; </span><span class="language-bash">tar -zcvf &lt;output&gt; &lt;input&gt; <span class="hljs-comment"># 压缩</span></span><br><span class="hljs-meta prompt_">&gt; </span><span class="language-bash">tar -zxvf &lt;input&gt; -C &lt;ouput&gt; <span class="hljs-comment"># 解压</span></span><br>-c new tar file<br>-x extract tar file<br>-z gzip<br>-v show output<br>-f archive name<br>-C dir<br></code></pre></td></tr></table></figure><h1 id="nginx-mainline"><a href="#nginx-mainline" class="headerlink" title="nginx-mainline"></a>nginx-mainline</h1><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>nginx-mainline 相较于 nginx</p><ul><li>更多的 feature</li><li>更新的版本</li><li>修复了 bug</li></ul><h2 id="setup"><a href="#setup" class="headerlink" title="setup"></a>setup</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">&gt; </span><span class="language-bash">sudo pacman -Syu nginx-mainline</span><br><span class="hljs-meta prompt_">&gt; </span><span class="language-bash">paru -S nginx-mainline-mod-dav-ext <span class="hljs-comment"># 提供 webdav 服务，网络文件夹</span></span><br><span class="hljs-meta prompt_">&gt; </span><span class="language-bash">paru -S nginx-mainline-mod-fancyindex <span class="hljs-comment"># 网络文件索引</span></span><br></code></pre></td></tr></table></figure><h2 id="添加-host"><a href="#添加-host" class="headerlink" title="添加 host"></a>添加 host</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">&gt; </span><span class="language-bash">sudo vim /etc/nginx/nginx.conf</span><br></code></pre></td></tr></table></figure><h3 id="主域名-main-domain"><a href="#主域名-main-domain" class="headerlink" title="主域名 | main domain"></a>主域名 | main domain</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs shell">server&#123;<br>server_name xxx.xxx;<br>root path/to/root;<br>location / &#123;<br>index index.html index.php;<br>&#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="子域名-subdomain"><a href="#子域名-subdomain" class="headerlink" title="子域名 | subdomain"></a>子域名 | subdomain</h3><ul><li><p>本地文件夹</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs shell">server&#123;<br>server_name subdomain.xxx.xxx;<br>root path/to/dir;<br>location / &#123;<br>index index.html index.php;<br>&#125;<br>&#125;<br></code></pre></td></tr></table></figure></li><li><p>开放出来的端口</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs shell">server&#123;<br>server_name subdomain.xxx.xxx;<br>location / &#123;<br>proxy_pass http://127.0.0.1:&lt;port&gt;;<br>&#125;<br>&#125;<br></code></pre></td></tr></table></figure></li></ul><h2 id="权限"><a href="#权限" class="headerlink" title="权限"></a>权限</h2><h3 id="403-Forbidden-问题"><a href="#403-Forbidden-问题" class="headerlink" title="403 Forbidden 问题"></a>403 Forbidden 问题</h3><p>网页根目录，<strong>其他用户</strong>至少要 r, x 权限，及 005<br>推荐更改为</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">&gt; </span><span class="language-bash">sudo <span class="hljs-built_in">chmod</span> -R 755 path/to/webroot</span><br></code></pre></td></tr></table></figure><h1 id="certbot"><a href="#certbot" class="headerlink" title="certbot"></a>certbot</h1><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">&gt; </span><span class="language-bash">sudo pacman -Syu certbot-nginx</span><br></code></pre></td></tr></table></figure><h2 id="添加域名"><a href="#添加域名" class="headerlink" title="添加域名"></a>添加域名</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">&gt; </span><span class="language-bash">vim /etc/nginx/nginx.conf</span><br>server&#123;<br>    server_name &lt;domain&gt;;<br>    listen 80;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="为域名签证书"><a href="#为域名签证书" class="headerlink" title="为域名签证书"></a>为域名签证书</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">&gt; </span><span class="language-bash">sudo certbot --nginx --rsa-key-size 4096</span><br></code></pre></td></tr></table></figure><h1 id="qBittorrent"><a href="#qBittorrent" class="headerlink" title="qBittorrent"></a>qBittorrent</h1><h2 id="qBittorrent-安装和运行"><a href="#qBittorrent-安装和运行" class="headerlink" title="qBittorrent 安装和运行"></a>qBittorrent 安装和运行</h2><p>安装</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">&gt; </span><span class="language-bash">sudo pacman -Syu qbittorrent-nox</span><br></code></pre></td></tr></table></figure><p>运行 qBittorrent</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">&gt; </span><span class="language-bash">qbittorrent-nox</span><br></code></pre></td></tr></table></figure><p>弹出的提示语表明 WebUI 已经在 localhost:8080 处运行了</p><p>打开浏览器输入地址 + 端口 (例如: 192.168.0.1:8080)</p><p>根据提示语，默认用户名是admin，默认密码是adminadmin</p><p>登陆进去就能看见 qbittorrent 整体的 WebUI 界面了</p><h2 id="配置qBittorrent"><a href="#配置qBittorrent" class="headerlink" title="配置qBittorrent"></a>配置qBittorrent</h2><h3 id="设置语言"><a href="#设置语言" class="headerlink" title="设置语言"></a>设置语言</h3><ul><li>鼠标停在左上角的 Tools</li><li>点击Options</li><li>点击Web UI</li><li>English</li><li>滑倒最底下找到并点击 简体中文</li><li>将滚动条滑倒最底下</li><li>点击s ave</li></ul><h3 id="配置https"><a href="#配置https" class="headerlink" title="配置https"></a>配置https</h3><p>我们回到arch 的命令行上</p><p>ctrl+c 关掉正在运行 WebUI</p><p>进入 qb 的配置文件夹</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">&gt; </span><span class="language-bash"><span class="hljs-built_in">cd</span> /home/<span class="hljs-variable">$USER</span>/.config/qBittorrent</span><br></code></pre></td></tr></table></figure><p>创建新的文件夹并进入，此文件夹用来存放证书和密钥</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">&gt; </span><span class="language-bash"><span class="hljs-built_in">mkdir</span> ssl</span><br><span class="hljs-meta prompt_">&gt; </span><span class="language-bash"><span class="hljs-built_in">cd</span> ssl</span><br></code></pre></td></tr></table></figure><p>接下来有两个方法可供选择</p><h4 id="方法1：自己生成密钥（不推荐）"><a href="#方法1：自己生成密钥（不推荐）" class="headerlink" title="方法1：自己生成密钥（不推荐）"></a><del>方法1：自己生成密钥（不推荐）</del></h4><h5 id="生成证书和密钥"><a href="#生成证书和密钥" class="headerlink" title="生成证书和密钥"></a>生成证书和密钥</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">&gt; </span><span class="language-bash">openssl req -x509 -newkey rsa:4096 -days 365 -keyout server.key -out server.crt -nodes</span><br></code></pre></td></tr></table></figure><p>此过程会被询问 国家名字，电子邮件什么的。但这些都不需要管，一直按Enter就可以</p><p>运行 ls 命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">&gt; </span><span class="language-bash"><span class="hljs-built_in">ls</span></span><br></code></pre></td></tr></table></figure><p>确认有没有 server.crt 和 server.key 这两个文件，有就说明生成成功了</p><p>设置这两个文件为只读权限</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">&gt; </span><span class="language-bash"><span class="hljs-built_in">chmod</span> 400 server.crt</span><br><span class="hljs-meta prompt_">&gt; </span><span class="language-bash"><span class="hljs-built_in">chmod</span> 400 server.key</span><br></code></pre></td></tr></table></figure><h5 id="使用证书和密钥"><a href="#使用证书和密钥" class="headerlink" title="使用证书和密钥"></a>使用证书和密钥</h5><p>进入 qb 的配置文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">&gt; </span><span class="language-bash"><span class="hljs-built_in">cd</span> /home/<span class="hljs-variable">$USER</span>/.config</span><br><span class="hljs-meta prompt_">&gt; </span><span class="language-bash">vim qBittorrent.config</span><br></code></pre></td></tr></table></figure><p>找到有 WebUI\HTTPS 前缀的的三个参数并添加或更改它们的值</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">WebuUI\HTTPS\CertificationPath=/home/$USER/.config/qBittorrent/ssl/server.crt<br>WebuUI\HTTPS\Eabled=true<br>WebuUI\HTTPS\KeyPath=/home/$USER/.config/qBittorrent/ssl/server.key<br></code></pre></td></tr></table></figure><p>最后保存退出 (ESC -&gt; : -&gt; wq -&gt; Enter)</p><h4 id="方法2：使用-letsencrypt-获取证书链（推荐）"><a href="#方法2：使用-letsencrypt-获取证书链（推荐）" class="headerlink" title="方法2：使用 letsencrypt 获取证书链（推荐）"></a>方法2：使用 letsencrypt 获取证书链（推荐）</h4><p>详情查看 <a href="#certbot">certbot</a></p><p>获取到的密钥默认会保存在</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">&gt; </span><span class="language-bash">/etc/letsencrypt/live/&lt;your.domain&gt;</span><br></code></pre></td></tr></table></figure><p>这里会生成4个 .pem 文件</p><p>使用 ls 命令查看（要加sudo），README文件不要管，我们用不着</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">&gt; </span><span class="language-bash">sudo <span class="hljs-built_in">ls</span> /etc/letsencrypt/live/&lt;your.domain&gt;</span><br><span class="hljs-meta prompt_">&gt; </span><span class="language-bash">cert.pem  chain.pem  fullchain.pem  privkey.pem  README</span><br></code></pre></td></tr></table></figure><h1 id="h5ai"><a href="#h5ai" class="headerlink" title="h5ai"></a>h5ai</h1><h2 id="nginx"><a href="#nginx" class="headerlink" title="nginx"></a>nginx</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">location / &#123;<br>/h5ai/_h5ai/public/index.php<br>&#125;<br></code></pre></td></tr></table></figure><p>重启 nginx 服务</p><figure class="highlight node-repl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs node-repl"><span class="hljs-meta prompt_">&gt;</span> <span class="language-javascript">sudo systemctl restart nginx.<span class="hljs-property">service</span></span><br></code></pre></td></tr></table></figure><h2 id="主页面加密码："><a href="#主页面加密码：" class="headerlink" title="主页面加密码："></a>主页面加密码：</h2><p><a href="https://www.tok9.com/archives/386/">https://www.tok9.com/archives/386/</a></p><h2 id="public-index-php-加密码"><a href="#public-index-php-加密码" class="headerlink" title="public&#x2F;index.php 加密码"></a>public&#x2F;index.php 加密码</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">&gt; </span><span class="language-bash"><span class="hljs-built_in">head</span> /dev/urandom | <span class="hljs-built_in">tr</span> -dc A-Za-z0-9 | <span class="hljs-built_in">head</span> -c length ; <span class="hljs-built_in">echo</span> <span class="hljs-string">&#x27;&#x27;</span> <span class="hljs-comment"># 随机字符串</span></span><br><span class="hljs-meta prompt_">&gt; </span><span class="language-bash"><span class="hljs-built_in">echo</span> -n <span class="hljs-string">&quot;密码&quot;</span> |<span class="hljs-built_in">sha512sum</span> <span class="hljs-comment"># 加密密码</span></span><br></code></pre></td></tr></table></figure><h3 id="extensions"><a href="#extensions" class="headerlink" title="extensions"></a>extensions</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">&gt; </span><span class="language-bash">sudo pacman -S imagick <span class="hljs-comment"># 安装 imagemagick (PDF thumbs)</span></span><br><span class="hljs-meta prompt_">&gt; </span><span class="language-bash">sudo pacman -S ffmpeg</span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">&gt; </span><span class="language-bash">sudo vim /etc/php/php.ini</span><br>enable<br>gd<br>zip<br>exif<br>add<br>extension=imagick<br><span class="hljs-meta prompt_">&gt; </span><span class="language-bash">sudo systemctl restart php-fpm.service</span><br></code></pre></td></tr></table></figure><h1 id="AriaNg-aria2-（2023-09-16-更新）"><a href="#AriaNg-aria2-（2023-09-16-更新）" class="headerlink" title="AriaNg + aria2 （2023&#x2F;09&#x2F;16 更新）"></a>AriaNg + aria2 （2023&#x2F;09&#x2F;16 更新）</h1><h2 id="简介-1"><a href="#简介-1" class="headerlink" title="简介"></a>简介</h2><p>AriaNg 是 aria2 的 web-ui</p><h2 id="下载-AriaNg-静态页面"><a href="#下载-AriaNg-静态页面" class="headerlink" title="下载 AriaNg 静态页面"></a>下载 AriaNg 静态页面</h2><p><a href="https://github.com/mayswind/AriaNg/releases">AriaNg Releases</a></p><h2 id="aria2-配置文件"><a href="#aria2-配置文件" class="headerlink" title="aria2 配置文件"></a>aria2 配置文件</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">&gt; </span><span class="language-bash"><span class="hljs-built_in">mkdir</span> -p ~/.aria2</span><br><span class="hljs-meta prompt_">&gt; </span><span class="language-bash"><span class="hljs-built_in">touch</span> .aria2/aria2.session <span class="hljs-comment"># 没有 session 文件会报错</span></span><br><span class="hljs-meta prompt_">&gt; </span><span class="language-bash">vim .aria2/aria2.conf</span><br><span class="hljs-meta prompt_">  #</span><span class="language-bash"><span class="hljs-comment"># 文件保存设置 ##</span></span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">  # </span><span class="language-bash">下载目录。可使用绝对路径或相对路径, 默认: 当前启动位置</span><br>  dir=&lt;/path/to/downloads&gt;<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">  #</span><span class="language-bash"><span class="hljs-comment"># RPC 设置 ##</span></span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">  # </span><span class="language-bash">启用 JSON-RPC/XML-RPC 服务器, 默认:<span class="hljs-literal">false</span></span><br>  enable-rpc=true<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">  # </span><span class="language-bash">接受所有远程请求, 默认:<span class="hljs-literal">false</span></span><br>  rpc-allow-origin-all=true<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">  # </span><span class="language-bash">允许外部访问, 默认:<span class="hljs-literal">false</span></span><br>  rpc-listen-all=true<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">  # </span><span class="language-bash">RPC 监听端口, 默认:6800</span><br>  rpc-listen-port=6800<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">  # </span><span class="language-bash">RPC 密钥 非必要</span><br><span class="hljs-meta prompt_">  # </span><span class="language-bash">rpc-secret=&lt;随机字符串&gt;</span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">  # </span><span class="language-bash">RPC 服务 SSL/TLS 加密, 默认：<span class="hljs-literal">false</span>,  如果使用 https 需开启</span><br><span class="hljs-meta prompt_">  # </span><span class="language-bash">rpc-secure=<span class="hljs-literal">true</span></span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">  # </span><span class="language-bash">在 RPC 服务中启用 SSL/TLS 加密时的证书文件(.pem/.crt)</span><br><span class="hljs-meta prompt_">  # </span><span class="language-bash">rpc-certificate=&lt;/path/to/fullchain.pem&gt;</span><br><span class="hljs-meta prompt_">  # </span><span class="language-bash">rpc-private-key=&lt;/path/to/.aria2/privkey.pem&gt;</span><br></code></pre></td></tr></table></figure><h2 id="添加-https-证书"><a href="#添加-https-证书" class="headerlink" title="添加 https 证书"></a>添加 https 证书</h2><ul><li>启动后将生成配置文件</li><li>添加证书  <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">&gt; </span><span class="language-bash">sudo <span class="hljs-built_in">cp</span> /etc/letsencrypt/&lt;domain_name&gt;/fullchain.pem .</span><br><span class="hljs-meta prompt_">&gt; </span><span class="language-bash">sudo <span class="hljs-built_in">cp</span> /etc/letsencrypt/&lt;domain_name&gt;/privkey.pem .</span><br><span class="hljs-meta prompt_">&gt; </span><span class="language-bash">sudo <span class="hljs-built_in">chown</span> <span class="hljs-variable">$USER</span>:<span class="hljs-variable">$USER</span> fullchain.pem privkey.pem</span><br><span class="hljs-meta prompt_">&gt; </span><span class="language-bash"><span class="hljs-built_in">chmod</span> 400 fullchain.pem privkey.pem</span><br><span class="hljs-meta prompt_">&gt; </span><span class="language-bash">vim .aria2/aria2.conf</span><br>  rpc-secure=true<br>  rpc-certificate=/path/to/fullchain.pem<br>  rpc-private-key=/path/to/privkey.pem<br></code></pre></td></tr></table></figure></li></ul><h2 id="将-aria2-加入-systemd"><a href="#将-aria2-加入-systemd" class="headerlink" title="将 aria2 加入 systemd"></a>将 aria2 加入 systemd</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">&gt; </span><span class="language-bash">vim /lib/systemd/system/aria2.service</span><br>  [Unit]<br>  Description=Aria2 Service<br>  After=network.target<br><br>  [Service]<br>  ExecStart=/usr/bin/aria2c --conf-path=&lt;/path/to/aria2.conf&gt;<br><br>  [Install]<br>  WantedBy=default.target<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">&gt; </span><span class="language-bash">sudo systemctl <span class="hljs-built_in">enable</span> aria2</span><br><span class="hljs-meta prompt_">&gt; </span><span class="language-bash">sudo systemctl start aria2</span><br></code></pre></td></tr></table></figure><h1 id="Docker-2022-7-28-更新"><a href="#Docker-2022-7-28-更新" class="headerlink" title="Docker (2022&#x2F;7&#x2F;28 更新)"></a>Docker (2022&#x2F;7&#x2F;28 更新)</h1><h2 id="安装-1"><a href="#安装-1" class="headerlink" title="安装"></a>安装</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo pacman -Syu docker docker-compose<br></code></pre></td></tr></table></figure><h2 id="加入-docker-组"><a href="#加入-docker-组" class="headerlink" title="加入 docker 组"></a>加入 docker 组</h2><p>如果不想使用 sudo 来运行 docker 命令，那就将用户加入 docker 组</p><ul><li><p>创建 docker 组（可跳过。一般情况下，当你安装完 docker 后，docker 组会自动创建。）</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">&gt; </span><span class="language-bash">sudo groupadd docker</span><br></code></pre></td></tr></table></figure></li><li><p>添加用户到 docker 组</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">&gt; </span><span class="language-bash">sudo usermod -aG docker <span class="hljs-variable">$USER</span></span><br></code></pre></td></tr></table></figure></li></ul><h2 id="启动-docker-服务"><a href="#启动-docker-服务" class="headerlink" title="启动 docker 服务"></a>启动 docker 服务</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">&gt; </span><span class="language-bash">sudo systemctl start docker.socket</span><br><span class="hljs-meta prompt_">&gt; </span><span class="language-bash">sudo systemctl <span class="hljs-built_in">enable</span> docker.socket</span><br></code></pre></td></tr></table></figure><h2 id="docker-compose"><a href="#docker-compose" class="headerlink" title="docker-compose"></a>docker-compose</h2><h3 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h3><ul><li>基于 docker-compose.yaml 运行 docker</li><li>可读性强</li><li>具备较强的可迁移性</li></ul><h3 id="通用模板"><a href="#通用模板" class="headerlink" title="通用模板"></a>通用模板</h3><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs yml"><span class="hljs-attr">version:</span> <span class="hljs-string">&#x27;&lt;docker-compose版本号&gt;&#x27;</span><br><br><span class="hljs-attr">services:</span><br>  <span class="hljs-string">&lt;container_specifier&gt;:</span><br>    <span class="hljs-attr">image:</span> <span class="hljs-string">&lt;image_name</span> <span class="hljs-string">from</span> <span class="hljs-string">dockerhub&gt;</span><br>    <span class="hljs-attr">container_name:</span> <span class="hljs-string">&lt;container_name&gt;</span><br>    <span class="hljs-attr">volumes:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">&lt;/path/to/dir&gt;:&lt;/path/to/dir/in/container&gt;</span><br>    <span class="hljs-attr">ports:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">&lt;port&gt;:&lt;port&gt;</span><br>    <span class="hljs-attr">command:</span> <span class="hljs-string">&lt;cmd&gt;</span><br>    <span class="hljs-attr">user:</span> <span class="hljs-string">&lt;id&gt;:&lt;id&gt;</span><br>    <span class="hljs-attr">restart:</span> <span class="hljs-string">always</span><br></code></pre></td></tr></table></figure><ul><li>id 获取方式<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">&gt; </span><span class="language-bash"><span class="hljs-built_in">id</span> -u &lt;username&gt;</span><br><span class="hljs-meta prompt_">&gt; </span><span class="language-bash"><span class="hljs-built_in">id</span> -g &lt;username&gt;</span><br></code></pre></td></tr></table></figure></li></ul><h3 id="运行与关闭"><a href="#运行与关闭" class="headerlink" title="运行与关闭"></a>运行与关闭</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs text">docker<br>├── container1<br>│├── # 当前位置<br>│└── docker-compose.yml<br>│<br>├── container2<br>│└── docker-compose.yml<br>│<br>└── container3<br>└── docker-compose.yml<br></code></pre></td></tr></table></figure><p><strong>同级目录存在 docker-compose.yml 文件才可运行</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">&gt; </span><span class="language-bash">docker-compose up <span class="hljs-comment"># 前台运行</span></span><br><span class="hljs-meta prompt_">&gt; </span><span class="language-bash">docker-compose up -d <span class="hljs-comment"># 后台运行</span></span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">&gt; </span><span class="language-bash">docker-compose down <span class="hljs-comment"># 关闭</span></span><br></code></pre></td></tr></table></figure><h1 id="atom-2022-8-22-更新"><a href="#atom-2022-8-22-更新" class="headerlink" title="atom (2022&#x2F;8&#x2F;22 更新)"></a>atom (2022&#x2F;8&#x2F;22 更新)</h1><h2 id="简介-2"><a href="#简介-2" class="headerlink" title="简介"></a>简介</h2><ul><li>文本编辑器</li></ul><h2 id="安装-2"><a href="#安装-2" class="headerlink" title="安装"></a>安装</h2><ul><li><p>安装 remakepkg</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">&gt; </span><span class="language-bash">paru -S remakepkg</span><br></code></pre></td></tr></table></figure></li><li><p>在 <a href="https://archlinux.pkgs.org/">Arch Linux Repositories</a> 下载最新版 apm</p></li><li><p>新建 REPKGBUILD，并添加</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">&gt; </span><span class="language-bash">vim REPKGBUILD</span><br>remove-depend nodejs-lts-gallium<br>add-depend nodejs<br></code></pre></td></tr></table></figure></li><li><p>更改依赖</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">&gt; </span><span class="language-bash">repkg -i ./&lt;文件名&gt; -r REPKGBUILD</span><br><span class="hljs-meta prompt_">&gt;</span><span class="language-bash">&gt;&gt; Removing dependency nodejs-lts-gallium</span><br><span class="hljs-meta prompt_">&gt;</span><span class="language-bash">&gt;&gt; Adding dependency nodejs</span><br><span class="hljs-meta prompt_">&gt;</span><span class="language-bash">&gt;&gt; Adding provision apm=2.6.5-2</span><br><span class="hljs-meta prompt_">&gt;</span><span class="language-bash">&gt;&gt; Successfully created ./&lt;新文件名&gt;</span><br></code></pre></td></tr></table></figure></li><li><p>本地安装 apm</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">&gt; </span><span class="language-bash">sudo pacman -U ./&lt;新文件名&gt;</span><br></code></pre></td></tr></table></figure></li><li><p>安装 atom editor</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">&gt; </span><span class="language-bash">paru -S atom-editor-beta-bin</span><br></code></pre></td></tr></table></figure></li></ul><h1 id="dwm-2022-10-12-更新"><a href="#dwm-2022-10-12-更新" class="headerlink" title="dwm (2022&#x2F;10&#x2F;12 更新)"></a>dwm (2022&#x2F;10&#x2F;12 更新)</h1><h2 id="简介-3"><a href="#简介-3" class="headerlink" title="简介"></a>简介</h2><p>窗口管理器</p><h2 id="安装-3"><a href="#安装-3" class="headerlink" title="安装"></a>安装</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">&gt; </span><span class="language-bash">sudo pacman -Syu xorg xorg-xinit base-devel</span><br><span class="hljs-meta prompt_">&gt; </span><span class="language-bash">sudo pacman -Syu rofi feh alacritty picom</span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">&gt; </span><span class="language-bash"><span class="hljs-built_in">cp</span> /etc/X11/xinit/xinitrc ~/.xinitrc</span><br><span class="hljs-meta prompt_">&gt; </span><span class="language-bash"><span class="hljs-built_in">exec</span> dwm</span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">&gt; </span><span class="language-bash">git <span class="hljs-built_in">clone</span> git://git.suckless.org/dwm</span><br><span class="hljs-meta prompt_">&gt; </span><span class="language-bash"><span class="hljs-built_in">cd</span> dwm</span><br><span class="hljs-meta prompt_">&gt; </span><span class="language-bash">make clean install</span><br><span class="hljs-meta prompt_">&gt; </span><span class="language-bash">startx</span><br></code></pre></td></tr></table></figure><h1 id="komga"><a href="#komga" class="headerlink" title="komga"></a>komga</h1><h2 id="简介-4"><a href="#简介-4" class="headerlink" title="简介"></a>简介</h2><p>管理和查看本地图片集（或漫画）</p><h2 id="连接-Tachiyomi"><a href="#连接-Tachiyomi" class="headerlink" title="连接 Tachiyomi"></a>连接 Tachiyomi</h2><ul><li>从 Tachiyomi 添加 kmoga 扩展来支持远程连接 kmoga</li><li>填写 服务器地址，用户名和密码 来连接 komga 服务器</li><li>Tachiyomi 最大可支持同时连接三个 kmoga 服务器</li></ul><h1 id="NTFS-3G-（2023-12-02-更新）"><a href="#NTFS-3G-（2023-12-02-更新）" class="headerlink" title="NTFS-3G （2023&#x2F;12&#x2F;02 更新）"></a>NTFS-3G （2023&#x2F;12&#x2F;02 更新）</h1><h2 id="简介-5"><a href="#简介-5" class="headerlink" title="简介"></a>简介</h2><p>用于在 Linux 上装载 NTFS 格式的硬盘。</p><h1 id="参考内容"><a href="#参考内容" class="headerlink" title="参考内容"></a>参考内容</h1><p><a href="https://www.jianshu.com/p/51bd2b82ff35">Linux设置密钥登录 - 简书 (jianshu.com)</a></p><p><a href="https://www.runoob.com/w3cnote/set-ssh-login-key.html">设置 SSH 通过密钥登录 | 菜鸟教程 (runoob.com)</a></p><p><a href="https://www.runoob.com/linux/linux-shell.html">Shell 教程 | 菜鸟教程 (runoob.com)</a></p><p><a href="https://www.yisu.com/help/id_104.html">SSL安全证书证书安装_中间证书&#x2F;证书链安装指南 - 帮助文档 - 亿速云 (yisu.com)</a></p><p><a href="https://bbs.archlinux.org/viewtopic.php?id=275264">nodejs-lts-gallium and nodejs are in conflict</a></p><p><a href="https://tech.he-sb.top/posts/use-https-on-aria2/">使用 HTTPS 连接 Aria2</a></p><p><a href="https://github.com/gutenye/systemd-units/blob/master/aria2/aria2.service">aria2.service</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>archlinux</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>个人博客搭建指南 | Hexo篇</title>
    <link href="/blog/posts/c4f446aa.html"/>
    <url>/blog/posts/c4f446aa.html</url>
    
    <content type="html"><![CDATA[<!-- --><!--# 准备下载并安装 Nodejs，git切换至 root 用户<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">&gt; </span><span class="language-bash">sudo pacman -Syu nodejs git</span><br><span class="hljs-meta prompt_">&gt; </span><span class="language-bash">su root</span><br></code></pre></td></tr></table></figure><h2 id="安装nodejs"><a href="#安装nodejs" class="headerlink" title="安装nodejs"></a>安装nodejs</h2><p>在nodejs官网下载二进制压缩包。</p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs crmsh">&gt; mkdir /usr/local/lib/<span class="hljs-keyword">node</span><span class="hljs-title">/nodejs</span><br></code></pre></td></tr></table></figure><p>新建文件夹，并将压缩包解压在这个路径下</p><h3 id="添加全局环境变量"><a href="#添加全局环境变量" class="headerlink" title="添加全局环境变量"></a>添加全局环境变量</h3><p>在最后一行添加</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs routeros">&gt; vim /etc<span class="hljs-built_in">/profile</span><br><span class="hljs-built_in"></span><span class="hljs-comment"># Nodejs</span><br><span class="hljs-built_in">export</span> <span class="hljs-attribute">NODEJS_HOME</span>=/usr/local/lib/node/nodejs<br><span class="hljs-built_in">export</span> <span class="hljs-attribute">PATH</span>=<span class="hljs-variable">$PATH</span>:NODEJS_HOME/bin<br></code></pre></td></tr></table></figure><ul><li>*NODEJS_HOME 使系统找到nodejs的安装路径。</li><li>*PATH 是全局环境变量，所以我要添加新的路径，而不是覆写。</li><li>$PATH保存的原来系统的全局环境变量，使用符号 “:” 来分割不同的路径。</li></ul><p>在最后一行添加</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">&gt; vim /root/.bashrc<br><span class="hljs-built_in">source</span> /etc/profile<br></code></pre></td></tr></table></figure><p>*用来将 全局环境变量 应用到每个terminal<br>然后执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">source</span> /root/.bashrc<br></code></pre></td></tr></table></figure><p>*应用.bashrc文件<br>最后关闭所有的 terminal 再重新打开，这样刚刚添加的全局环境变量就成功应用到了每个打开的 terminal。</p><h2 id="安装git"><a href="#安装git" class="headerlink" title="安装git"></a>安装git</h2><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmake">sudo apt <span class="hljs-keyword">install</span> git<br></code></pre></td></tr></table></figure><h3 id="配置git"><a href="#配置git" class="headerlink" title="配置git"></a>配置git</h3><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs stylus">git config <span class="hljs-attr">--user</span><span class="hljs-selector-class">.name</span> <span class="hljs-string">&quot;&lt;YOUR NAME&gt;&quot;</span><br>git config <span class="hljs-attr">--user</span><span class="hljs-selector-class">.email</span> <span class="hljs-string">&quot;&lt;EMAIL ADDRESS&gt;&quot;</span><br></code></pre></td></tr></table></figure><p>举个栗子：</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs stylus">git config <span class="hljs-attr">--user</span><span class="hljs-selector-class">.name</span> <span class="hljs-string">&quot;DerivativeMarmot&quot;</span><br>git config <span class="hljs-attr">--user</span><span class="hljs-selector-class">.email</span> <span class="hljs-string">&quot;DerivativeMarmot@gamil.com&quot;</span><br></code></pre></td></tr></table></figure><h2 id="检查安装"><a href="#检查安装" class="headerlink" title="检查安装"></a>检查安装</h2><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs crmsh"><span class="hljs-keyword">node</span> <span class="hljs-title">-v</span><br>npm --<span class="hljs-keyword">version</span><br></code></pre></td></tr></table></figure><p>–&gt;</p><!-- --><h1 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h1><h2 id="安装-nodejs，git"><a href="#安装-nodejs，git" class="headerlink" title="安装 nodejs，git"></a>安装 nodejs，git</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">&gt; </span><span class="language-bash">sudo pacman -Syu nodejs git</span><br></code></pre></td></tr></table></figure><h2 id="配置-git"><a href="#配置-git" class="headerlink" title="配置 git"></a>配置 git</h2><p>通用配置</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">&gt; </span><span class="language-bash">vim ~/.gitconfig</span><br>[user]<br>name = &lt;username&gt;<br>email = &lt;email-address&gt;<br>password = &lt;personal-access-token&gt;<br>[credential]<br>helper = cache --timeout &lt;seconds&gt;<br>[core]<br>editor = /usr/bin/vim<br></code></pre></td></tr></table></figure><h1 id="安装-Hexo"><a href="#安装-Hexo" class="headerlink" title="安装 Hexo"></a>安装 Hexo</h1><h2 id="创建-Blog-文件夹"><a href="#创建-Blog-文件夹" class="headerlink" title="创建 Blog 文件夹"></a>创建 Blog 文件夹</h2><p>来到你home的路径下（就是有Documents, Pictures, Downloads 的那个目录下）</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">&gt; </span><span class="language-bash"><span class="hljs-built_in">cd</span> /home/&lt;user&gt;</span><br></code></pre></td></tr></table></figure><p>创建 Blog 文件夹并进入</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">&gt; </span><span class="language-bash"><span class="hljs-built_in">mkdir</span> Blog</span><br><span class="hljs-meta prompt_">&gt; </span><span class="language-bash"><span class="hljs-built_in">cd</span> Blog/</span><br></code></pre></td></tr></table></figure><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><h3 id="国外安装"><a href="#国外安装" class="headerlink" title="国外安装"></a>国外安装</h3><p>通过 npm 安装 hexo，其中 -g 表示 global 意思是 全局安装；hexo-cli 就是 hexo 本体了。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">&gt; </span><span class="language-bash">npm install -g hexo-cli</span><br></code></pre></td></tr></table></figure><h3 id="国内安装"><a href="#国内安装" class="headerlink" title="国内安装"></a>国内安装</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">&gt; </span><span class="language-bash">npm install -g cnpm --registry=https://registry.npm.taobao.org</span><br><span class="hljs-meta prompt_">&gt; </span><span class="language-bash">cnpm install -g hexo-cli</span><br></code></pre></td></tr></table></figure><p>因为网速或其他的原因，使用 <a href="#%E5%9B%BD%E5%A4%96%E5%AE%89%E8%A3%85">国外安装</a> 的方法在国内可能会安装失败。<br>我们先用 npm 安装淘宝的镜像源 cnpm，再用 cnpm 来安装 hexo.</p><h2 id="检查安装-1"><a href="#检查安装-1" class="headerlink" title="检查安装"></a>检查安装</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">&gt; </span><span class="language-bash">hexo -v</span><br></code></pre></td></tr></table></figure><h1 id="使用-Hexo"><a href="#使用-Hexo" class="headerlink" title="使用 Hexo"></a>使用 Hexo</h1><h2 id="快速开始"><a href="#快速开始" class="headerlink" title="快速开始"></a>快速开始</h2><h3 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">&gt; </span><span class="language-bash">hexo init</span><br></code></pre></td></tr></table></figure><p>hexo 在 Blog 文件夹里初始化运行框架所需的文件，请等待一小会儿。<br>初始化之后会生成一个 hello world 的样本博客可供参考。</p><h3 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">&gt; </span><span class="language-bash">hexo s</span><br></code></pre></td></tr></table></figure><p>启动之后，终端提示网页已生成在 localhost:4000。<br>打开浏览器，在地址栏输入 localhost:4000 就能看到你的博客界面。</p><h2 id="添加博客"><a href="#添加博客" class="headerlink" title="添加博客"></a>添加博客</h2><h3 id="新建博客"><a href="#新建博客" class="headerlink" title="新建博客"></a>新建博客</h3><p>回到终端，键盘按下 ctrl+c 来停止博客运行。<br>新建文章。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">&gt; </span><span class="language-bash">hexo n <span class="hljs-string">&quot;MyFirstBlog&quot;</span></span><br></code></pre></td></tr></table></figure><p>n 表示 new 意思是 新建</p><h3 id="编写博客"><a href="#编写博客" class="headerlink" title="编写博客"></a>编写博客</h3><p>进入文章保存文件夹</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">&gt; </span><span class="language-bash"><span class="hljs-built_in">cd</span> <span class="hljs-built_in">source</span>/_post</span><br></code></pre></td></tr></table></figure><p>进入到博客本体，在这里你会看到你刚刚创建的博客，文件名是你刚刚取的。<br>hello_world.md 是之前初始化的时候生成的，你在浏览页面的时候应该也看到了。</p><p>随便写点东西。支持markdown格式</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">&gt; </span><span class="language-bash">vim MyFirstBlog.md</span><br></code></pre></td></tr></table></figure><h3 id="生成博客"><a href="#生成博客" class="headerlink" title="生成博客"></a>生成博客</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">&gt; </span><span class="language-bash">hexo clean &amp;&amp; hexo g &amp;&amp; hexo s</span><br></code></pre></td></tr></table></figure><ul><li>clean: 清理浏览器缓存的作用，并删除 public 下的文件</li><li>g: generate, 在 public 下生成 html</li><li>s: start, 启动</li></ul><h3 id="预览博客"><a href="#预览博客" class="headerlink" title="预览博客"></a>预览博客</h3><p>打开浏览器，在地址栏输入 localhost:4000<br>你应该就能看到，刚刚编写的的博客了</p><h2 id="添加-README-md"><a href="#添加-README-md" class="headerlink" title="添加 README.md"></a>添加 README.md</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">新建 README.md</span><br><span class="hljs-meta prompt_">&gt; </span><span class="language-bash"><span class="hljs-built_in">touch</span> <span class="hljs-built_in">source</span>/README.md</span><br><span class="hljs-meta prompt_">&gt; </span><span class="language-bash"><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;# blog supported by [Hexo](https://hexo.io/)&quot;</span> &gt; <span class="hljs-built_in">source</span>/README.md</span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">找到 skip_render 参数，并添加 README.md</span><br><span class="hljs-meta prompt_">&gt; </span><span class="language-bash">vim _config.yml</span><br>skip_render: README.md<br><br></code></pre></td></tr></table></figure><h1 id="部署到远端服务器"><a href="#部署到远端服务器" class="headerlink" title="部署到远端服务器"></a>部署到远端服务器</h1><h2 id="部署到-github-pages"><a href="#部署到-github-pages" class="headerlink" title="部署到 github pages"></a>部署到 github pages</h2><p><strong>安装插件</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">&gt; </span><span class="language-bash">npm install --save hexo-deployer-git</span><br></code></pre></td></tr></table></figure><h3 id="option-1-部署到主文件夹-github-io"><a href="#option-1-部署到主文件夹-github-io" class="headerlink" title="option 1: 部署到主文件夹 github.io"></a>option 1: 部署到主文件夹 github.io</h3><h4 id="新建仓库"><a href="#新建仓库" class="headerlink" title="新建仓库"></a>新建仓库</h4><p>仓库名设置为</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">username</span>&gt;</span>.github.io<br></code></pre></td></tr></table></figure><h4 id="更改-config-yml-文件"><a href="#更改-config-yml-文件" class="headerlink" title="更改 _config.yml 文件"></a>更改 _config.yml 文件</h4><p>在 Blog 文件夹下</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">&gt; </span><span class="language-bash">vim _config.yml</span><br></code></pre></td></tr></table></figure><p>找到 deployment 的设置，添加缺失的内容</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell">deploy:<br>type: git<br>repo: https://github.com/&lt;username&gt;/&lt;username&gt;.github.io.git<br>branch: main<br></code></pre></td></tr></table></figure><h4 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">&gt; </span><span class="language-bash">hexo clean &amp;&amp; hexo d</span><br></code></pre></td></tr></table></figure><h4 id="浏览"><a href="#浏览" class="headerlink" title="浏览"></a>浏览</h4><p>浏览器访问</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">&lt;usrname&gt;.github.io<br></code></pre></td></tr></table></figure><h3 id="option-2-部署到子文件夹-github-io-blog"><a href="#option-2-部署到子文件夹-github-io-blog" class="headerlink" title="option 2: 部署到子文件夹 github.io&#x2F;blog"></a>option 2: 部署到子文件夹 github.io&#x2F;blog</h3><div class="alert alert-warning">    <p class="alert-heading">        <b>注意:</b>    </p>    <div class="alert-body">        <p>前提是，可以访问 &lt;username&gt;.github.io </p>    </div></div><h4 id="新建仓库-1"><a href="#新建仓库-1" class="headerlink" title="新建仓库"></a>新建仓库</h4><p>仓库名设置为 blog, 或者其他名字</p><h4 id="更改-config-yml-文件-1"><a href="#更改-config-yml-文件-1" class="headerlink" title="更改 _config.yml 文件"></a>更改 _config.yml 文件</h4><p>在 Blog 文件夹下，找到 deployment 的设置，添加缺失的内容</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">&gt; </span><span class="language-bash">vim _config.yml</span><br>deploy:<br>type: git<br>repo: https://github.com/&lt;username&gt;/&lt;刚刚新建的仓库名称&gt;.git<br>branch: gh-pages<br></code></pre></td></tr></table></figure><h4 id="部署-1"><a href="#部署-1" class="headerlink" title="部署"></a>部署</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">&gt; </span><span class="language-bash">hexo clean &amp;&amp; hexo d</span><br></code></pre></td></tr></table></figure><h4 id="浏览-1"><a href="#浏览-1" class="headerlink" title="浏览"></a>浏览</h4><p>浏览器访问</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plaintext">&lt;usrname&gt;.github.io/&lt;刚刚新建的仓库名称&gt;<br></code></pre></td></tr></table></figure><div class="alert alert-warning">    <p class="alert-heading">        <b>注意:</b>    </p>    <div class="alert-body">        <p>由于 github 的延迟，等待 2-3 分钟之后，才能看到。</p>    </div></div><h1 id="迁移"><a href="#迁移" class="headerlink" title="迁移"></a>迁移</h1><p>TODO</p><h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><p><a href="https://www.bilibili.com/video/BV1Yb411a7ty">手把手教你从0开始搭建自己的个人博客 |无坑版视频教程| hexo_哔哩哔哩 (゜-゜)つロ 干杯~-bilibili</a><br>font-family: Monaco, Consolas, “Andale Mono”, “DejaVu Sans Mono”, monospace;</p>]]></content>
    
    
    
    <tags>
      
      <tag>archlinux</tag>
      
      <tag>hexo</tag>
      
      <tag>github</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
